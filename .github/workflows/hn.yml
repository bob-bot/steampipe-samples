name: "fetch hackernews items"

defaults:
  run:
    working-directory: ./all/hackernews

on:
  schedule:
    - cron:  '15 * * * *'

  push:
    branches:
      - main

jobs:
  cron:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

#    actions are not compatible with working-directory
#
#    - uses: francois2metz/setup-steampipe@v1
#      with:
#        steampipe-version: 'latest'
#        steampipe-plugins: |
#          {
#            "hackernews": {}
#          }
#
#    so install steampipe this way

    - name: echo ~
      run: echo ~

    - name: ls ~
      run: ls ~

    - name: pwd
      run: pwd

    - name: ls
      run: ls

    - name: clock1
      run: echo `date`

    - name: clock2
      run: echo `date` >> ./times.txt
    - name: install steampipe
      run: sudo /bin/sh -c "$(curl -fsSL https://raw.githubusercontent.com/turbot/steampipe/main/install.sh)"

    - name: install hackernews
      run: steampipe plugin install hackernews

    - name: install csv
      run: steampipe plugin install csv

    - name: configure csv
      run: cp ./csv.spc ~/.steampipe/config/csv.spc

    - name: check config
      run: more ~/.steampipe/config/csv.spc

    - name: capture hourly snapshot
      run: STEAMPIPE_LOG=trace steampipe query "select * from hackernews_new where time > now() - interval '1 hour'" --output csv >> ./csv/hn_`date +%s`.csv

    - name: capture hourly count
      run: STEAMPIPE_LOG=trace steampipe query "select count(*) as stories from hackernews_new where time > now() - interval '1 hour'" --output csv > ./logs/count.txt

    - name: combine files
      run: |
        cat hn_header.txt > hn.csv

        for file in ./csv/hn_*.csv; do
          tail -n +2 $file >> hn.csv
        done

    - name: create hn_items_all      
      run: |
        cat hn_scores_and_comments.txt > hn_scores_and_comments.csv
        
        steampipe query "create table hn_items_tmp as select * from csv.hn"

        steampipe query "create table hn_items_all as select distinct on (id) * from hn_items_tmp"

        steampipe query "update hn_items_all set descendants = 0::text where descendants = '<null>'"

    - name: create hn_scores_and_comments
      run: |
        cat hn_scores_and_comments.txt > hn
        steampipe query "create table hn_scores_and_comments as ( select id, score, descendants from hn_items_all order by time desc )"

    - name: check hn_scores_and_comments
      run: steampipe query "select * from hn_scores_and_comments limit 3"

    - name: update hn_scores_and_comments
      run: steampipe query "with new_scores_and_comments as ( select *, (select score::text as new_score from hackernews_item i where i.id = sc.id::bigint),  (select descendants::text as new_comments from hackernews_item i where i.id = sc.id::bigint) from hn_scores_and_comments sc )    
        update hn_scores_and_comments sc set score = n.new_score::text, descendants = n.new_comments::text from new_scores_and_comments n where sc.id = n.id::text"

    - name: export hn_scores_and_comments
      run: steampipe query "select * from hn_scores_and_comments" --output csv >> ./hn_scores_and_comments.csv"

    - name: setup git 
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"

    - name: add
      run: |
        git add ./csv
        cp ~/.steampipe/logs/p*.log ./logs
        git add ./csv ./logs 

    - name: commit
      run:
        git commit -m "update hn" ./csv ./logs ./times.txt ./hn_scores_and_comments.csv

    - name: push
      run:
        git push origin main

    - name: Exit
      if: ${{ steps.checks.outcome == 'failure' }}
      run: exit 1
      
